[
  {
    "timestamp": "2024-02-26T01:42:31.473Z",
    "added": [
      "buildSourceMapTree",
      "remapping",
      "MapSource",
      "OriginalSource",
      "traceMappings",
      "originalPositionFor",
      "binarySearch",
      "upperBound",
      "lowerBound",
      "memoizedState",
      "memoizedBinarySearch",
      "buildBySources",
      "resolve",
      "maybeSort",
      "stripFilename",
      "encodedMappings",
      "decodedMappings",
      "traceSegment",
      "generatedPositionFor",
      "allGeneratedPositionsFor",
      "eachMapping",
      "sourceContentFor",
      "presortedDecodedMap",
      "decodedMap",
      "encodedMap",
      "makeDir",
      "sync",
      "findConfigUpwards",
      "findPackageData",
      "findRelativeConfig",
      "findRootConfig",
      "loadConfig",
      "resolveShowConfigPath",
      "resolvePlugin",
      "resolvePreset",
      "loadPlugin",
      "loadPreset",
      "resolveBrowserslistConfigFile",
      "resolveTargets",
      "transformFileSync",
      "transformFileAsync",
      "transformFile",
      "parse",
      "parseExpression",
      "arrayExpression",
      "assignmentExpression",
      "binaryExpression",
      "interpreterDirective",
      "directive",
      "directiveLiteral",
      "blockStatement",
      "breakStatement",
      "callExpression",
      "catchClause",
      "conditionalExpression",
      "continueStatement",
      "debuggerStatement",
      "doWhileStatement",
      "emptyStatement",
      "expressionStatement",
      "file",
      "forInStatement",
      "forStatement",
      "functionDeclaration",
      "functionExpression",
      "identifier",
      "ifStatement",
      "labeledStatement",
      "stringLiteral",
      "numericLiteral",
      "nullLiteral",
      "booleanLiteral",
      "regExpLiteral",
      "logicalExpression",
      "memberExpression",
      "newExpression",
      "program",
      "objectExpression",
      "objectMethod",
      "objectProperty",
      "restElement",
      "returnStatement",
      "sequenceExpression",
      "parenthesizedExpression",
      "switchCase",
      "switchStatement",
      "thisExpression",
      "throwStatement",
      "tryStatement",
      "unaryExpression",
      "updateExpression",
      "variableDeclaration",
      "variableDeclarator",
      "whileStatement",
      "withStatement",
      "assignmentPattern",
      "arrayPattern",
      "arrowFunctionExpression",
      "classBody",
      "classExpression",
      "classDeclaration",
      "exportAllDeclaration",
      "exportDefaultDeclaration",
      "exportNamedDeclaration",
      "exportSpecifier",
      "forOfStatement",
      "importDeclaration",
      "importDefaultSpecifier",
      "importNamespaceSpecifier",
      "importSpecifier",
      "importExpression",
      "metaProperty",
      "classMethod",
      "objectPattern",
      "spreadElement",
      "_super",
      "taggedTemplateExpression",
      "templateElement",
      "templateLiteral",
      "yieldExpression",
      "awaitExpression",
      "_import",
      "bigIntLiteral",
      "exportNamespaceSpecifier",
      "optionalMemberExpression",
      "optionalCallExpression",
      "classProperty",
      "classAccessorProperty",
      "classPrivateProperty",
      "classPrivateMethod",
      "privateName",
      "staticBlock",
      "anyTypeAnnotation",
      "arrayTypeAnnotation",
      "booleanTypeAnnotation",
      "booleanLiteralTypeAnnotation",
      "nullLiteralTypeAnnotation",
      "classImplements",
      "declareClass",
      "declareFunction",
      "declareInterface",
      "declareModule",
      "declareModuleExports",
      "declareTypeAlias",
      "declareOpaqueType",
      "declareVariable",
      "declareExportDeclaration",
      "declareExportAllDeclaration",
      "declaredPredicate",
      "existsTypeAnnotation",
      "functionTypeAnnotation",
      "functionTypeParam",
      "genericTypeAnnotation",
      "inferredPredicate",
      "interfaceExtends",
      "interfaceDeclaration",
      "interfaceTypeAnnotation",
      "intersectionTypeAnnotation",
      "mixedTypeAnnotation",
      "emptyTypeAnnotation",
      "nullableTypeAnnotation",
      "numberLiteralTypeAnnotation",
      "numberTypeAnnotation",
      "objectTypeAnnotation",
      "objectTypeInternalSlot",
      "objectTypeCallProperty",
      "objectTypeIndexer",
      "objectTypeProperty",
      "objectTypeSpreadProperty",
      "opaqueType",
      "qualifiedTypeIdentifier",
      "stringLiteralTypeAnnotation",
      "stringTypeAnnotation",
      "symbolTypeAnnotation",
      "thisTypeAnnotation",
      "tupleTypeAnnotation",
      "typeofTypeAnnotation",
      "typeAlias",
      "typeAnnotation",
      "typeCastExpression",
      "typeParameter",
      "typeParameterDeclaration",
      "typeParameterInstantiation",
      "unionTypeAnnotation",
      "variance",
      "voidTypeAnnotation",
      "enumDeclaration",
      "enumBooleanBody",
      "enumNumberBody",
      "enumStringBody",
      "enumSymbolBody",
      "enumBooleanMember",
      "enumNumberMember",
      "enumStringMember",
      "enumDefaultedMember",
      "indexedAccessType",
      "optionalIndexedAccessType",
      "jsxAttribute",
      "jsxClosingElement",
      "jsxElement",
      "jsxEmptyExpression",
      "jsxExpressionContainer",
      "jsxSpreadChild",
      "jsxIdentifier",
      "jsxMemberExpression",
      "jsxNamespacedName",
      "jsxOpeningElement",
      "jsxSpreadAttribute",
      "jsxText",
      "jsxFragment",
      "jsxOpeningFragment",
      "jsxClosingFragment",
      "noop",
      "placeholder",
      "v8IntrinsicIdentifier",
      "argumentPlaceholder",
      "bindExpression",
      "importAttribute",
      "decorator",
      "doExpression",
      "exportDefaultSpecifier",
      "recordExpression",
      "tupleExpression",
      "decimalLiteral",
      "moduleExpression",
      "topicReference",
      "pipelineTopicExpression",
      "pipelineBareFunction",
      "pipelinePrimaryTopicReference",
      "tsParameterProperty",
      "tsDeclareFunction",
      "tsDeclareMethod",
      "tsQualifiedName",
      "tsCallSignatureDeclaration",
      "tsConstructSignatureDeclaration",
      "tsPropertySignature",
      "tsMethodSignature",
      "tsIndexSignature",
      "tsAnyKeyword",
      "tsBooleanKeyword",
      "tsBigIntKeyword",
      "tsIntrinsicKeyword",
      "tsNeverKeyword",
      "tsNullKeyword",
      "tsNumberKeyword",
      "tsObjectKeyword",
      "tsStringKeyword",
      "tsSymbolKeyword",
      "tsUndefinedKeyword",
      "tsUnknownKeyword",
      "tsVoidKeyword",
      "tsThisType",
      "tsFunctionType",
      "tsConstructorType",
      "tsTypeReference",
      "tsTypePredicate",
      "tsTypeQuery",
      "tsTypeLiteral",
      "tsArrayType",
      "tsTupleType",
      "tsOptionalType",
      "tsRestType",
      "tsNamedTupleMember",
      "tsUnionType",
      "tsIntersectionType",
      "tsConditionalType",
      "tsInferType",
      "tsParenthesizedType",
      "tsTypeOperator",
      "tsIndexedAccessType",
      "tsMappedType",
      "tsLiteralType",
      "tsExpressionWithTypeArguments",
      "tsInterfaceDeclaration",
      "tsInterfaceBody",
      "tsTypeAliasDeclaration",
      "tsInstantiationExpression",
      "tsAsExpression",
      "tsSatisfiesExpression",
      "tsTypeAssertion",
      "tsEnumDeclaration",
      "tsEnumMember",
      "tsModuleDeclaration",
      "tsModuleBlock",
      "tsImportType",
      "tsImportEqualsDeclaration",
      "tsExternalModuleReference",
      "tsNonNullExpression",
      "tsExportAssignment",
      "tsNamespaceExportDeclaration",
      "tsTypeAnnotation",
      "tsTypeParameterInstantiation",
      "tsTypeParameterDeclaration",
      "tsTypeParameter",
      "isAccessor",
      "assertAccessor",
      "isAnyTypeAnnotation",
      "assertAnyTypeAnnotation",
      "isArgumentPlaceholder",
      "assertArgumentPlaceholder",
      "isArrayExpression",
      "assertArrayExpression",
      "isArrayPattern",
      "assertArrayPattern",
      "isArrayTypeAnnotation",
      "assertArrayTypeAnnotation",
      "isArrowFunctionExpression",
      "assertArrowFunctionExpression",
      "isAssignmentExpression",
      "assertAssignmentExpression",
      "isAssignmentPattern",
      "assertAssignmentPattern",
      "isAwaitExpression",
      "assertAwaitExpression",
      "isBigIntLiteral",
      "assertBigIntLiteral",
      "isBinary",
      "assertBinary",
      "isBinaryExpression",
      "assertBinaryExpression",
      "isBindExpression",
      "assertBindExpression",
      "isBlock",
      "assertBlock",
      "isBlockParent",
      "assertBlockParent",
      "isBlockStatement",
      "assertBlockStatement",
      "isBooleanLiteral",
      "assertBooleanLiteral",
      "isBooleanLiteralTypeAnnotation",
      "assertBooleanLiteralTypeAnnotation",
      "isBooleanTypeAnnotation",
      "assertBooleanTypeAnnotation",
      "isBreakStatement",
      "assertBreakStatement",
      "isCallExpression",
      "assertCallExpression",
      "isCatchClause",
      "assertCatchClause",
      "isClass",
      "assertClass",
      "isClassAccessorProperty",
      "assertClassAccessorProperty",
      "isClassBody",
      "assertClassBody",
      "isClassDeclaration",
      "assertClassDeclaration",
      "isClassExpression",
      "assertClassExpression",
      "isClassImplements",
      "assertClassImplements",
      "isClassMethod",
      "assertClassMethod",
      "isClassPrivateMethod",
      "assertClassPrivateMethod",
      "isClassPrivateProperty",
      "assertClassPrivateProperty",
      "isClassProperty",
      "assertClassProperty",
      "isCompletionStatement",
      "assertCompletionStatement",
      "isConditional",
      "assertConditional",
      "isConditionalExpression",
      "assertConditionalExpression",
      "isContinueStatement",
      "assertContinueStatement",
      "isDebuggerStatement",
      "assertDebuggerStatement",
      "isDecimalLiteral",
      "assertDecimalLiteral",
      "isDeclaration",
      "assertDeclaration",
      "isDeclareClass",
      "assertDeclareClass",
      "isDeclareExportAllDeclaration",
      "assertDeclareExportAllDeclaration",
      "isDeclareExportDeclaration",
      "assertDeclareExportDeclaration",
      "isDeclareFunction",
      "assertDeclareFunction",
      "isDeclareInterface",
      "assertDeclareInterface",
      "isDeclareModule",
      "assertDeclareModule",
      "isDeclareModuleExports",
      "assertDeclareModuleExports",
      "isDeclareOpaqueType",
      "assertDeclareOpaqueType",
      "isDeclareTypeAlias",
      "assertDeclareTypeAlias",
      "isDeclareVariable",
      "assertDeclareVariable",
      "isDeclaredPredicate",
      "assertDeclaredPredicate",
      "isDecorator",
      "assertDecorator",
      "isDirective",
      "assertDirective",
      "isDirectiveLiteral",
      "assertDirectiveLiteral",
      "isDoExpression",
      "assertDoExpression",
      "isDoWhileStatement",
      "assertDoWhileStatement",
      "isEmptyStatement",
      "assertEmptyStatement",
      "isEmptyTypeAnnotation",
      "assertEmptyTypeAnnotation",
      "isEnumBody",
      "assertEnumBody",
      "isEnumBooleanBody",
      "assertEnumBooleanBody",
      "isEnumBooleanMember",
      "assertEnumBooleanMember",
      "isEnumDeclaration",
      "assertEnumDeclaration",
      "isEnumDefaultedMember",
      "assertEnumDefaultedMember",
      "isEnumMember",
      "assertEnumMember",
      "isEnumNumberBody",
      "assertEnumNumberBody",
      "isEnumNumberMember",
      "assertEnumNumberMember",
      "isEnumStringBody",
      "assertEnumStringBody",
      "isEnumStringMember",
      "assertEnumStringMember",
      "isEnumSymbolBody",
      "assertEnumSymbolBody",
      "isExistsTypeAnnotation",
      "assertExistsTypeAnnotation",
      "isExportAllDeclaration",
      "assertExportAllDeclaration",
      "isExportDeclaration",
      "assertExportDeclaration",
      "isExportDefaultDeclaration",
      "assertExportDefaultDeclaration",
      "isExportDefaultSpecifier",
      "assertExportDefaultSpecifier",
      "isExportNamedDeclaration",
      "assertExportNamedDeclaration",
      "isExportNamespaceSpecifier",
      "assertExportNamespaceSpecifier",
      "isExportSpecifier",
      "assertExportSpecifier",
      "isExpression",
      "assertExpression",
      "isExpressionStatement",
      "assertExpressionStatement",
      "isExpressionWrapper",
      "assertExpressionWrapper",
      "isFile",
      "assertFile",
      "isFlow",
      "assertFlow",
      "isFlowBaseAnnotation",
      "assertFlowBaseAnnotation",
      "isFlowDeclaration",
      "assertFlowDeclaration",
      "isFlowPredicate",
      "assertFlowPredicate",
      "isFlowType",
      "assertFlowType",
      "isFor",
      "assertFor",
      "isForInStatement",
      "assertForInStatement",
      "isForOfStatement",
      "assertForOfStatement",
      "isForStatement",
      "assertForStatement",
      "isForXStatement",
      "assertForXStatement",
      "isFunction",
      "assertFunction",
      "isFunctionDeclaration",
      "assertFunctionDeclaration",
      "isFunctionExpression",
      "assertFunctionExpression",
      "isFunctionParent",
      "assertFunctionParent",
      "isFunctionTypeAnnotation",
      "assertFunctionTypeAnnotation",
      "isFunctionTypeParam",
      "assertFunctionTypeParam",
      "isGenericTypeAnnotation",
      "assertGenericTypeAnnotation",
      "isIdentifier",
      "assertIdentifier",
      "isIfStatement",
      "assertIfStatement",
      "isImmutable",
      "assertImmutable",
      "isImport",
      "assertImport",
      "isImportAttribute",
      "assertImportAttribute",
      "isImportDeclaration",
      "assertImportDeclaration",
      "isImportDefaultSpecifier",
      "assertImportDefaultSpecifier",
      "isImportExpression",
      "assertImportExpression",
      "isImportNamespaceSpecifier",
      "assertImportNamespaceSpecifier",
      "isImportOrExportDeclaration",
      "assertImportOrExportDeclaration",
      "isImportSpecifier",
      "assertImportSpecifier",
      "isIndexedAccessType",
      "assertIndexedAccessType",
      "isInferredPredicate",
      "assertInferredPredicate",
      "isInterfaceDeclaration",
      "assertInterfaceDeclaration",
      "isInterfaceExtends",
      "assertInterfaceExtends",
      "isInterfaceTypeAnnotation",
      "assertInterfaceTypeAnnotation",
      "isInterpreterDirective",
      "assertInterpreterDirective",
      "isIntersectionTypeAnnotation",
      "assertIntersectionTypeAnnotation",
      "isJSX",
      "assertJSX",
      "isJSXAttribute",
      "assertJSXAttribute",
      "isJSXClosingElement",
      "assertJSXClosingElement",
      "isJSXClosingFragment",
      "assertJSXClosingFragment",
      "isJSXElement",
      "assertJSXElement",
      "isJSXEmptyExpression",
      "assertJSXEmptyExpression",
      "isJSXExpressionContainer",
      "assertJSXExpressionContainer",
      "isJSXFragment",
      "assertJSXFragment",
      "isJSXIdentifier",
      "assertJSXIdentifier",
      "isJSXMemberExpression",
      "assertJSXMemberExpression",
      "isJSXNamespacedName",
      "assertJSXNamespacedName",
      "isJSXOpeningElement",
      "assertJSXOpeningElement",
      "isJSXOpeningFragment",
      "assertJSXOpeningFragment",
      "isJSXSpreadAttribute",
      "assertJSXSpreadAttribute",
      "isJSXSpreadChild",
      "assertJSXSpreadChild",
      "isJSXText",
      "assertJSXText",
      "isLVal",
      "assertLVal",
      "isLabeledStatement",
      "assertLabeledStatement",
      "isLiteral",
      "assertLiteral",
      "isLogicalExpression",
      "assertLogicalExpression",
      "isLoop",
      "assertLoop",
      "isMemberExpression",
      "assertMemberExpression",
      "isMetaProperty",
      "assertMetaProperty",
      "isMethod",
      "assertMethod",
      "isMiscellaneous",
      "assertMiscellaneous",
      "isMixedTypeAnnotation",
      "assertMixedTypeAnnotation",
      "isModuleDeclaration",
      "assertModuleDeclaration",
      "isModuleExpression",
      "assertModuleExpression",
      "isModuleSpecifier",
      "assertModuleSpecifier",
      "isNewExpression",
      "assertNewExpression",
      "isNoop",
      "assertNoop",
      "isNullLiteral",
      "assertNullLiteral",
      "isNullLiteralTypeAnnotation",
      "assertNullLiteralTypeAnnotation",
      "isNullableTypeAnnotation",
      "assertNullableTypeAnnotation",
      "isNumberLiteral",
      "assertNumberLiteral",
      "isNumberLiteralTypeAnnotation",
      "assertNumberLiteralTypeAnnotation",
      "isNumberTypeAnnotation",
      "assertNumberTypeAnnotation",
      "isNumericLiteral",
      "assertNumericLiteral",
      "isObjectExpression",
      "assertObjectExpression",
      "isObjectMember",
      "assertObjectMember",
      "isObjectMethod",
      "assertObjectMethod",
      "isObjectPattern",
      "assertObjectPattern",
      "isObjectProperty",
      "assertObjectProperty",
      "isObjectTypeAnnotation",
      "assertObjectTypeAnnotation",
      "isObjectTypeCallProperty",
      "assertObjectTypeCallProperty",
      "isObjectTypeIndexer",
      "assertObjectTypeIndexer",
      "isObjectTypeInternalSlot",
      "assertObjectTypeInternalSlot",
      "isObjectTypeProperty",
      "assertObjectTypeProperty",
      "isObjectTypeSpreadProperty",
      "assertObjectTypeSpreadProperty",
      "isOpaqueType",
      "assertOpaqueType",
      "isOptionalCallExpression",
      "assertOptionalCallExpression",
      "isOptionalIndexedAccessType",
      "assertOptionalIndexedAccessType",
      "isOptionalMemberExpression",
      "assertOptionalMemberExpression",
      "isParenthesizedExpression",
      "assertParenthesizedExpression",
      "isPattern",
      "assertPattern",
      "isPatternLike",
      "assertPatternLike",
      "isPipelineBareFunction",
      "assertPipelineBareFunction",
      "isPipelinePrimaryTopicReference",
      "assertPipelinePrimaryTopicReference",
      "isPipelineTopicExpression",
      "assertPipelineTopicExpression",
      "isPlaceholder",
      "assertPlaceholder",
      "isPrivate",
      "assertPrivate",
      "isPrivateName",
      "assertPrivateName",
      "isProgram",
      "assertProgram",
      "isProperty",
      "assertProperty",
      "isPureish",
      "assertPureish",
      "isQualifiedTypeIdentifier",
      "assertQualifiedTypeIdentifier",
      "isRecordExpression",
      "assertRecordExpression",
      "isRegExpLiteral",
      "assertRegExpLiteral",
      "isRegexLiteral",
      "assertRegexLiteral",
      "isRestElement",
      "assertRestElement",
      "isRestProperty",
      "assertRestProperty",
      "isReturnStatement",
      "assertReturnStatement",
      "isScopable",
      "assertScopable",
      "isSequenceExpression",
      "assertSequenceExpression",
      "isSpreadElement",
      "assertSpreadElement",
      "isSpreadProperty",
      "assertSpreadProperty",
      "isStandardized",
      "assertStandardized",
      "isStatement",
      "assertStatement",
      "isStaticBlock",
      "assertStaticBlock",
      "isStringLiteral",
      "assertStringLiteral",
      "isStringLiteralTypeAnnotation",
      "assertStringLiteralTypeAnnotation",
      "isStringTypeAnnotation",
      "assertStringTypeAnnotation",
      "isSuper",
      "assertSuper",
      "isSwitchCase",
      "assertSwitchCase",
      "isSwitchStatement",
      "assertSwitchStatement",
      "isSymbolTypeAnnotation",
      "assertSymbolTypeAnnotation",
      "isTSAnyKeyword",
      "assertTSAnyKeyword",
      "isTSArrayType",
      "assertTSArrayType",
      "isTSAsExpression",
      "assertTSAsExpression",
      "isTSBaseType",
      "assertTSBaseType",
      "isTSBigIntKeyword",
      "assertTSBigIntKeyword",
      "isTSBooleanKeyword",
      "assertTSBooleanKeyword",
      "isTSCallSignatureDeclaration",
      "assertTSCallSignatureDeclaration",
      "isTSConditionalType",
      "assertTSConditionalType",
      "isTSConstructSignatureDeclaration",
      "assertTSConstructSignatureDeclaration",
      "isTSConstructorType",
      "assertTSConstructorType",
      "isTSDeclareFunction",
      "assertTSDeclareFunction",
      "isTSDeclareMethod",
      "assertTSDeclareMethod",
      "isTSEntityName",
      "assertTSEntityName",
      "isTSEnumDeclaration",
      "assertTSEnumDeclaration",
      "isTSEnumMember",
      "assertTSEnumMember",
      "isTSExportAssignment",
      "assertTSExportAssignment",
      "isTSExpressionWithTypeArguments",
      "assertTSExpressionWithTypeArguments",
      "isTSExternalModuleReference",
      "assertTSExternalModuleReference",
      "isTSFunctionType",
      "assertTSFunctionType",
      "isTSImportEqualsDeclaration",
      "assertTSImportEqualsDeclaration",
      "isTSImportType",
      "assertTSImportType",
      "isTSIndexSignature",
      "assertTSIndexSignature",
      "isTSIndexedAccessType",
      "assertTSIndexedAccessType",
      "isTSInferType",
      "assertTSInferType",
      "isTSInstantiationExpression",
      "assertTSInstantiationExpression",
      "isTSInterfaceBody",
      "assertTSInterfaceBody",
      "isTSInterfaceDeclaration",
      "assertTSInterfaceDeclaration",
      "isTSIntersectionType",
      "assertTSIntersectionType",
      "isTSIntrinsicKeyword",
      "assertTSIntrinsicKeyword",
      "isTSLiteralType",
      "assertTSLiteralType",
      "isTSMappedType",
      "assertTSMappedType",
      "isTSMethodSignature",
      "assertTSMethodSignature",
      "isTSModuleBlock",
      "assertTSModuleBlock",
      "isTSModuleDeclaration",
      "assertTSModuleDeclaration",
      "isTSNamedTupleMember",
      "assertTSNamedTupleMember",
      "isTSNamespaceExportDeclaration",
      "assertTSNamespaceExportDeclaration",
      "isTSNeverKeyword",
      "assertTSNeverKeyword",
      "isTSNonNullExpression",
      "assertTSNonNullExpression",
      "isTSNullKeyword",
      "assertTSNullKeyword",
      "isTSNumberKeyword",
      "assertTSNumberKeyword",
      "isTSObjectKeyword",
      "assertTSObjectKeyword",
      "isTSOptionalType",
      "assertTSOptionalType",
      "isTSParameterProperty",
      "assertTSParameterProperty",
      "isTSParenthesizedType",
      "assertTSParenthesizedType",
      "isTSPropertySignature",
      "assertTSPropertySignature",
      "isTSQualifiedName",
      "assertTSQualifiedName",
      "isTSRestType",
      "assertTSRestType",
      "isTSSatisfiesExpression",
      "assertTSSatisfiesExpression",
      "isTSStringKeyword",
      "assertTSStringKeyword",
      "isTSSymbolKeyword",
      "assertTSSymbolKeyword",
      "isTSThisType",
      "assertTSThisType",
      "isTSTupleType",
      "assertTSTupleType",
      "isTSType",
      "assertTSType",
      "isTSTypeAliasDeclaration",
      "assertTSTypeAliasDeclaration",
      "isTSTypeAnnotation",
      "assertTSTypeAnnotation",
      "isTSTypeAssertion",
      "assertTSTypeAssertion",
      "isTSTypeElement",
      "assertTSTypeElement",
      "isTSTypeLiteral",
      "assertTSTypeLiteral",
      "isTSTypeOperator",
      "assertTSTypeOperator",
      "isTSTypeParameter",
      "assertTSTypeParameter",
      "isTSTypeParameterDeclaration",
      "assertTSTypeParameterDeclaration",
      "isTSTypeParameterInstantiation",
      "assertTSTypeParameterInstantiation",
      "isTSTypePredicate",
      "assertTSTypePredicate",
      "isTSTypeQuery",
      "assertTSTypeQuery",
      "isTSTypeReference",
      "assertTSTypeReference",
      "isTSUndefinedKeyword",
      "assertTSUndefinedKeyword",
      "isTSUnionType",
      "assertTSUnionType",
      "isTSUnknownKeyword",
      "assertTSUnknownKeyword",
      "isTSVoidKeyword",
      "assertTSVoidKeyword",
      "isTaggedTemplateExpression",
      "assertTaggedTemplateExpression",
      "isTemplateElement",
      "assertTemplateElement",
      "isTemplateLiteral",
      "assertTemplateLiteral",
      "isTerminatorless",
      "assertTerminatorless",
      "isThisExpression",
      "assertThisExpression",
      "isThisTypeAnnotation",
      "assertThisTypeAnnotation",
      "isThrowStatement",
      "assertThrowStatement",
      "isTopicReference",
      "assertTopicReference",
      "isTryStatement",
      "assertTryStatement",
      "isTupleExpression",
      "assertTupleExpression",
      "isTupleTypeAnnotation",
      "assertTupleTypeAnnotation",
      "isTypeAlias",
      "assertTypeAlias",
      "isTypeAnnotation",
      "assertTypeAnnotation",
      "isTypeCastExpression",
      "assertTypeCastExpression",
      "isTypeParameter",
      "assertTypeParameter",
      "isTypeParameterDeclaration",
      "assertTypeParameterDeclaration",
      "isTypeParameterInstantiation",
      "assertTypeParameterInstantiation",
      "isTypeScript",
      "assertTypeScript",
      "isTypeofTypeAnnotation",
      "assertTypeofTypeAnnotation",
      "isUnaryExpression",
      "assertUnaryExpression",
      "isUnaryLike",
      "assertUnaryLike",
      "isUnionTypeAnnotation",
      "assertUnionTypeAnnotation",
      "isUpdateExpression",
      "assertUpdateExpression",
      "isUserWhitespacable",
      "assertUserWhitespacable",
      "isV8IntrinsicIdentifier",
      "assertV8IntrinsicIdentifier",
      "isVariableDeclaration",
      "assertVariableDeclaration",
      "isVariableDeclarator",
      "assertVariableDeclarator",
      "isVariance",
      "assertVariance",
      "isVoidTypeAnnotation",
      "assertVoidTypeAnnotation",
      "isWhile",
      "assertWhile",
      "isWhileStatement",
      "assertWhileStatement",
      "isWithStatement",
      "assertWithStatement",
      "isYieldExpression",
      "assertYieldExpression",
      "assertNode",
      "createTypeAnnotationBasedOnTypeof",
      "createUnionTypeAnnotation",
      "createFlowUnionType",
      "buildChildren",
      "clone",
      "cloneDeep",
      "cloneDeepWithoutLoc",
      "cloneNode",
      "cloneWithoutLoc",
      "addComment",
      "addComments",
      "inheritInnerComments",
      "inheritLeadingComments",
      "inheritsComments",
      "inheritTrailingComments",
      "removeComments",
      "ensureBlock",
      "toBindingIdentifierName",
      "toBlock",
      "toComputedKey",
      "toExpression",
      "toIdentifier",
      "toKeyAlias",
      "toSequenceExpression",
      "toStatement",
      "valueToNode",
      "removeTypeDuplicates",
      "appendToMemberExpression",
      "inherits",
      "prependToMemberExpression",
      "removeProperties",
      "removePropertiesDeep",
      "getBindingIdentifiers",
      "getOuterBindingIdentifiers",
      "traverse",
      "traverseFast",
      "shallowEqual",
      "buildMatchMemberExpression",
      "is",
      "isBinding",
      "isBlockScoped",
      "isLet",
      "isNode",
      "isNodesEquivalent",
      "isPlaceholderType",
      "isReferenced",
      "isScope",
      "isSpecifierDefault",
      "isType",
      "isValidES3Identifier",
      "isValidIdentifier",
      "isVar",
      "matchesPattern",
      "validate",
      "isCompatTag",
      "createTSUnionType",
      "NumberLiteral$1",
      "RegexLiteral$1",
      "RestProperty$1",
      "SpreadProperty$1",
      "buildUndefinedNode",
      "getType",
      "deprecationWarning",
      "emitForest",
      "emitForestLines",
      "getColMap",
      "emitTree",
      "parseFunctionRanges",
      "emitTreeLayer",
      "parseTreeLayer",
      "emitRange",
      "emitOffsets",
      "parseOffsets",
      "cloneProcessCov",
      "cloneScriptCov",
      "cloneFunctionCov",
      "cloneRangeCov",
      "compareScriptCovs",
      "compareFunctionCovs",
      "compareRangeCovs",
      "mergeProcessCovs",
      "mergeScriptCovs",
      "stringifyFunctionRootRange",
      "mergeFunctionCovs",
      "mergeRangeTrees",
      "mergeRangeTreeChildren",
      "insertChild",
      "nextChild",
      "normalizeProcessCov",
      "deepNormalizeProcessCov",
      "normalizeScriptCov",
      "deepNormalizeScriptCov",
      "normalizeFunctionCov",
      "normalizeRangeTree",
      "endChain",
      "loadFixture",
      "test",
      "testBench",
      "getSourceFiles",
      "getSourcesFrom",
      "getBenches",
      "wrapCallSite",
      "getErrorSource",
      "mapSourcePosition",
      "retrieveSourceMap",
      "resetRetrieveHandlers",
      "install",
      "uninstall",
      "getConsoleOutput",
      "createTestScheduler",
      "getVersion",
      "runCLI",
      "emptyObject",
      "isA",
      "formatTestPath",
      "getResultHeader",
      "getSnapshotStatus",
      "getSnapshotSummary",
      "getSummary",
      "printDisplayName",
      "relativePath",
      "trimAndFormatPath",
      "getCallsite",
      "formatTestResults",
      "createScriptTransformer",
      "createTranspilingRequire",
      "handlePotentialSyntaxError",
      "shouldInstrument",
      "decode",
      "encode",
      "watch",
      "Code",
      "Compile",
      "Errors",
      "Type",
      "Format",
      "CreateType",
      "CreateFormat",
      "Entries",
      "Clear",
      "Has",
      "Set",
      "Get",
      "TAny",
      "TArray",
      "TBigInt",
      "TBoolean",
      "TConstructor",
      "TDate",
      "TFunction",
      "TInteger",
      "TIntersect",
      "TKind",
      "TLiteral",
      "TNever",
      "TNot",
      "TNull",
      "TNumber",
      "TObject",
      "TPromise",
      "TRecord",
      "TRef",
      "TString",
      "TSymbol",
      "TTemplateLiteral",
      "TThis",
      "TTuple",
      "TUndefined",
      "TUnion",
      "TUnionLiteral",
      "TUint8Array",
      "TUnknown",
      "TUnsafe",
      "TVoid",
      "TReadonlyOptional",
      "TReadonly",
      "TOptional",
      "TSchema",
      "Check",
      "Extends",
      "Clone",
      "Map",
      "Resolve",
      "Create",
      "Parse",
      "ParseExact",
      "Generate",
      "Visit",
      "Cast",
      "Convert",
      "Diff",
      "Patch",
      "Equal",
      "Object",
      "Date",
      "Array",
      "Value",
      "TypedArray",
      "Mutate",
      "Delete",
      "Hash",
      "calledInOrder",
      "className",
      "wrap",
      "defaultMsg",
      "printWarning",
      "_exports",
      "orderByFirstCall",
      "valueToString",
      "transform",
      "transformSync",
      "transformAsync",
      "transformFromAst",
      "transformFromAstSync",
      "transformFromAstAsync",
      "parseSync",
      "parseAsync",
      "loadOptions",
      "loadPartialConfig",
      "loadPartialConfigAsync",
      "createConfigItem",
      "generate",
      "explode",
      "verify",
      "merge",
      "clear",
      "clearPath",
      "clearScope",
      "createServer",
      "serialize",
      "e",
      "parseScript",
      "parseModule",
      "tokenize",
      "replace",
      "attachComments",
      "cloneEnvironment",
      "query",
      "Router",
      "gracefulify",
      "createCoverageMap",
      "createCoverageSummary",
      "createFileCoverage",
      "createContext",
      "getDefaultWatermarks",
      "create",
      "autoMockOff",
      "autoMockOn",
      "clearAllMocks",
      "createMockFromModule",
      "resetAllMocks",
      "restoreAllMocks",
      "clearAllTimers",
      "getTimerCount",
      "setSystemTime",
      "getRealSystemTime",
      "getSeed",
      "now",
      "deepUnmock",
      "disableAutomock",
      "doMock",
      "dontMock",
      "enableAutomock",
      "fn",
      "genMockFromModule",
      "isEnvironmentTornDown",
      "isMockFunction",
      "mock",
      "mocked",
      "requireActual",
      "requireMock",
      "resetModules",
      "isolateModules",
      "isolateModulesAsync",
      "retryTimes",
      "replaceProperty",
      "runAllImmediates",
      "runAllTicks",
      "runAllTimers",
      "runAllTimersAsync",
      "runOnlyPendingTimers",
      "runOnlyPendingTimersAsync",
      "advanceTimersByTime",
      "advanceTimersByTimeAsync",
      "advanceTimersToNextTimer",
      "advanceTimersToNextTimerAsync",
      "setMock",
      "setTimeout",
      "spyOn",
      "unmock",
      "useFakeTimers",
      "useRealTimers",
      "pending",
      "fail",
      "clock",
      "any",
      "anything",
      "arrayContaining",
      "objectContaining",
      "createSpy",
      "createSpyObj",
      "pp",
      "addCustomEqualityTester",
      "stringMatching",
      "lookup",
      "extension",
      "load",
      "define",
      "token",
      "format",
      "compile",
      "morgan",
      "assert",
      "ok",
      "equal",
      "notEqual",
      "deepEqual",
      "notDeepEqual",
      "strictEqual",
      "notStrictEqual",
      "deepStrictEqual",
      "notDeepStrictEqual",
      "throws",
      "doesNotThrow",
      "ifError",
      "rejects",
      "doesNotReject",
      "match",
      "doesNotMatch",
      "executionAsyncId",
      "executionAsyncResource",
      "triggerAsyncId",
      "createHook",
      "isUtf8",
      "isAscii",
      "transcode",
      "resolveObjectURL",
      "atob",
      "btoa",
      "spawn",
      "exec",
      "__promisify__",
      "execFile",
      "fork",
      "spawnSync",
      "execSync",
      "execFileSync",
      "createHash",
      "createHmac",
      "createCipher",
      "createCipheriv",
      "createDecipher",
      "createDecipheriv",
      "generateKey",
      "generateKeySync",
      "createPrivateKey",
      "createPublicKey",
      "createSecretKey",
      "createSign",
      "createVerify",
      "createDiffieHellman",
      "getDiffieHellman",
      "createDiffieHellmanGroup",
      "pbkdf2",
      "pbkdf2Sync",
      "randomBytes",
      "pseudoRandomBytes",
      "randomInt",
      "randomFillSync",
      "randomFill",
      "scrypt",
      "scryptSync",
      "publicEncrypt",
      "publicDecrypt",
      "privateDecrypt",
      "privateEncrypt",
      "getCiphers",
      "getCurves",
      "getFips",
      "setFips",
      "getHashes",
      "createECDH",
      "timingSafeEqual",
      "generateKeyPairSync",
      "generateKeyPair",
      "sign",
      "diffieHellman",
      "getCipherInfo",
      "hkdf",
      "hkdfSync",
      "secureHeapUsed",
      "randomUUID",
      "generatePrime",
      "generatePrimeSync",
      "checkPrime",
      "checkPrimeSync",
      "setEngine",
      "getRandomValues",
      "createSocket",
      "hasSubscribers",
      "channel",
      "subscribe",
      "unsubscribe",
      "tracingChannel",
      "getServers",
      "lookupService",
      "resolve4",
      "resolve6",
      "resolveAny",
      "resolveCaa",
      "resolveCname",
      "resolveMx",
      "resolveNaptr",
      "resolveNs",
      "resolvePtr",
      "resolveSoa",
      "resolveSrv",
      "resolveTxt",
      "reverse",
      "getDefaultResultOrder",
      "setServers",
      "setDefaultResultOrder",
      "access",
      "copyFile",
      "open",
      "rename",
      "truncate",
      "rmdir",
      "rm",
      "mkdir",
      "readdir",
      "readlink",
      "symlink",
      "lstat",
      "stat",
      "statfs",
      "link",
      "unlink",
      "chmod",
      "lchmod",
      "lchown",
      "lutimes",
      "chown",
      "utimes",
      "realpath",
      "mkdtemp",
      "writeFile",
      "appendFile",
      "readFile",
      "opendir",
      "cp",
      "renameSync",
      "truncateSync",
      "ftruncate",
      "ftruncateSync",
      "chownSync",
      "fchown",
      "fchownSync",
      "lchownSync",
      "lutimesSync",
      "chmodSync",
      "fchmod",
      "fchmodSync",
      "lchmodSync",
      "fstat",
      "fstatSync",
      "statfsSync",
      "linkSync",
      "symlinkSync",
      "readlinkSync",
      "native",
      "realpathSync",
      "unlinkSync",
      "rmdirSync",
      "rmSync",
      "mkdirSync",
      "mkdtempSync",
      "readdirSync",
      "close",
      "closeSync",
      "openSync",
      "utimesSync",
      "futimes",
      "futimesSync",
      "fsync",
      "fsyncSync",
      "write",
      "writeSync",
      "read",
      "readSync",
      "readFileSync",
      "writeFileSync",
      "appendFileSync",
      "watchFile",
      "unwatchFile",
      "exists",
      "existsSync",
      "accessSync",
      "createReadStream",
      "createWriteStream",
      "fdatasync",
      "fdatasyncSync",
      "copyFileSync",
      "writev",
      "writevSync",
      "readv",
      "readvSync",
      "openAsBlob",
      "opendirSync",
      "cpSync",
      "structuredClone",
      "fetch",
      "request",
      "get",
      "validateHeaderName",
      "validateHeaderValue",
      "setMaxIdleHTTPParsers",
      "getDefaultSettings",
      "getPackedSettings",
      "getUnpackedSettings",
      "createSecureServer",
      "connect",
      "url",
      "waitForDebugger",
      "syncBuiltinESMExports",
      "findSourceMap",
      "createConnection",
      "getDefaultAutoSelectFamily",
      "setDefaultAutoSelectFamily",
      "getDefaultAutoSelectFamilyAttemptTimeout",
      "setDefaultAutoSelectFamilyAttemptTimeout",
      "isIP",
      "isIPv4",
      "isIPv6",
      "hostname",
      "loadavg",
      "uptime",
      "freemem",
      "totalmem",
      "cpus",
      "availableParallelism",
      "type",
      "release",
      "networkInterfaces",
      "homedir",
      "userInfo",
      "arch",
      "version",
      "platform",
      "machine",
      "tmpdir",
      "endianness",
      "getPriority",
      "setPriority",
      "monitorEventLoopDelay",
      "createHistogram",
      "toUnicode",
      "toASCII",
      "stringify",
      "escape",
      "unescape",
      "createInterface",
      "emitKeypressEvents",
      "clearLine",
      "clearScreenDown",
      "cursorTo",
      "moveCursor",
      "start",
      "buffer",
      "text",
      "arrayBuffer",
      "blob",
      "json",
      "finished",
      "pipeline",
      "addAbortSignal",
      "getDefaultHighWaterMark",
      "setDefaultHighWaterMark",
      "isErrored",
      "isReadable",
      "run",
      "describe",
      "skip",
      "todo",
      "only",
      "it",
      "before",
      "after",
      "beforeEach",
      "afterEach",
      "dot",
      "tap",
      "junit",
      "setImmediate",
      "setInterval",
      "clearTimeout",
      "clearInterval",
      "clearImmediate",
      "queueMicrotask",
      "checkServerIdentity",
      "createSecurePair",
      "createSecureContext",
      "createTracing",
      "getEnabledCategories",
      "isatty",
      "domainToASCII",
      "domainToUnicode",
      "fileURLToPath",
      "pathToFileURL",
      "urlToHttpOptions",
      "formatWithOptions",
      "getSystemErrorName",
      "getSystemErrorMap",
      "log",
      "toUSVString",
      "transferableAbortController",
      "transferableAbortSignal",
      "aborted",
      "inspect",
      "isArray",
      "isRegExp",
      "isDate",
      "isError",
      "debuglog",
      "isBoolean",
      "isBuffer",
      "isNull",
      "isNullOrUndefined",
      "isNumber",
      "isObject",
      "isPrimitive",
      "isString",
      "isSymbol",
      "isUndefined",
      "deprecate",
      "isDeepStrictEqual",
      "stripVTControlCharacters",
      "callbackify",
      "promisify",
      "parseArgs",
      "isAnyArrayBuffer",
      "isArgumentsObject",
      "isArrayBuffer",
      "isArrayBufferView",
      "isAsyncFunction",
      "isBigInt64Array",
      "isBigUint64Array",
      "isBooleanObject",
      "isBoxedPrimitive",
      "isDataView",
      "isExternal",
      "isFloat32Array",
      "isFloat64Array",
      "isGeneratorFunction",
      "isGeneratorObject",
      "isInt8Array",
      "isInt16Array",
      "isInt32Array",
      "isMap",
      "isMapIterator",
      "isModuleNamespaceObject",
      "isNativeError",
      "isNumberObject",
      "isPromise",
      "isProxy",
      "isSet",
      "isSetIterator",
      "isSharedArrayBuffer",
      "isStringObject",
      "isSymbolObject",
      "isTypedArray",
      "isUint8Array",
      "isUint8ClampedArray",
      "isUint16Array",
      "isUint32Array",
      "isWeakMap",
      "isWeakSet",
      "isKeyObject",
      "isCryptoKey",
      "cachedDataVersionTag",
      "getHeapStatistics",
      "getHeapSpaceStatistics",
      "setFlagsFromString",
      "getHeapSnapshot",
      "writeHeapSnapshot",
      "getHeapCodeStatistics",
      "deserialize",
      "takeCoverage",
      "stopCoverage",
      "setHeapSnapshotNearHeapLimit",
      "isContext",
      "runInContext",
      "runInNewContext",
      "runInThisContext",
      "compileFunction",
      "measureMemory",
      "markAsUntransferable",
      "moveMessagePortToContext",
      "receiveMessageOnPort",
      "getEnvironmentData",
      "setEnvironmentData",
      "createBrotliCompress",
      "createBrotliDecompress",
      "createGzip",
      "createGunzip",
      "createDeflate",
      "createInflate",
      "createDeflateRaw",
      "createInflateRaw",
      "createUnzip",
      "brotliCompress",
      "brotliCompressSync",
      "brotliDecompress",
      "brotliDecompressSync",
      "deflate",
      "deflateSync",
      "deflateRaw",
      "deflateRawSync",
      "gzip",
      "gzipSync",
      "gunzip",
      "gunzipSync",
      "inflate",
      "inflateSync",
      "inflateRaw",
      "inflateRawSync",
      "unzip",
      "unzipSync",
      "RangeParser",
      "send",
      "serveStatic",
      "applyExtends",
      "hideBin",
      "Yargs",
      "parseExpressionAt",
      "tokenizer",
      "getLineInfo",
      "simple",
      "ancestor",
      "recursive",
      "full",
      "fullAncestor",
      "make",
      "findNodeAt",
      "findNodeAround",
      "ansiRegex",
      "arg",
      "flag",
      "getAdapter",
      "toFormData",
      "formToJSON",
      "isAxiosError",
      "spread",
      "isCancel",
      "all",
      "jestHoist",
      "browserslist",
      "coverage",
      "clearCaches",
      "parseConfig",
      "readConfig",
      "findConfig",
      "hasFlag",
      "charRegex",
      "init",
      "compat",
      "getModulesListForTargetVersion",
      "runCreate",
      "createRequire",
      "deepmerge",
      "defineDataProperty",
      "diffSequence",
      "config",
      "configDotenv",
      "populate",
      "decrypt",
      "emojiRegex",
      "listen",
      "attach",
      "encodePacket",
      "encodeBase64Packet",
      "decodePacket",
      "decodeBase64Packet",
      "encodePayload",
      "decodePayload",
      "encodePayloadAsBinary",
      "decodePayloadAsBinary",
      "ucs2decode",
      "ucs2encode",
      "checkScalarValue",
      "createByte",
      "encodeCodePoint",
      "utf8encode",
      "readContinuationByte",
      "decodeSymbol",
      "utf8decode",
      "polling",
      "encodePacketToBinary",
      "createPacketEncoderStream",
      "createPacketDecoderStream",
      "getInfo",
      "hasOwn",
      "encodingExists",
      "decodeStream",
      "encodeStream",
      "isValid",
      "fromByteArray",
      "parseCIDR",
      "process",
      "subnetMatch",
      "isBinaryPath",
      "isFullwidthCodePoint",
      "normalize",
      "readConfigs",
      "readInitialOptions",
      "diff",
      "extract",
      "parseWithComments",
      "print_2",
      "strip",
      "bind",
      "printWithType",
      "replaceMatchedToAsymmetricMatcher",
      "cachedShouldLoadAsEsm",
      "convertDescriptorToString",
      "createDirectory",
      "deepCyclicCopy",
      "formatTime",
      "globsToMatcher",
      "installCommonGlobals",
      "interopRequireDefault",
      "invariant",
      "isNonNullable",
      "pluralize",
      "remove",
      "replacePathSepForGlob",
      "requireOrImportModule",
      "setGlobal",
      "testPathPatternToRegExp",
      "tryRealpath",
      "multipleValidOptions",
      "validateCLIOptions",
      "camelcase",
      "printPatternCaret",
      "printRestoredPatternCaret",
      "messageParent",
      "isSpaceSeparator",
      "isIdStartChar",
      "isIdContinueChar",
      "isDigit",
      "isHexDigit",
      "makeError",
      "pLimit",
      "addHook",
      "uniformArrayIntDistribution",
      "uniformBigIntDistribution",
      "uniformIntDistribution",
      "unsafeUniformArrayIntDistribution",
      "unsafeUniformBigIntDistribution",
      "unsafeUniformIntDistribution",
      "addArrayIntToNew",
      "addOneToPositiveArrayInt",
      "substractArrayIntToNew",
      "trimArrayIntInplace",
      "fromNumberToArrayInt64",
      "substractArrayInt64",
      "unsafeUniformArrayIntDistributionInternal",
      "unsafeUniformIntDistributionInternal",
      "unsafeGenerateN",
      "generateN",
      "unsafeSkipN",
      "skipN",
      "getRawBody",
      "promise",
      "imports",
      "exports",
      "legacy",
      "setPrototypeOf",
      "borderedText",
      "getConfigFile",
      "createConfigDir",
      "getLastUpdate",
      "saveLastUpdate",
      "getDistVersion",
      "hasNewVersion",
      "simpleUpdateNotifier",
      "to",
      "move",
      "up",
      "down",
      "forward",
      "backward",
      "nextLine",
      "prevLine",
      "lines",
      "slash",
      "patchAdapter",
      "restoreAdapter",
      "serveFile",
      "yeast",
      "deconstructPacket",
      "reconstructPacket",
      "hasBinary",
      "stringLength",
      "stripAnsi",
      "stripBom",
      "stripJsonComments",
      "updateOutput",
      "createJestPreset",
      "factory",
      "main",
      "onWarning",
      "createEsmHooks",
      "register",
      "createRepl",
      "createEvalAwarePartialHost",
      "getUseDefineForClassFields",
      "getEmitScriptTarget",
      "cachedLookup",
      "Hz",
      "Q",
      "ch",
      "cm",
      "cqb",
      "cqh",
      "cqi",
      "cqmax",
      "cqmin",
      "cqw",
      "deg",
      "dpcm",
      "dpi",
      "dppx",
      "dvb",
      "dvh",
      "dvi",
      "dvmax",
      "dvmin",
      "dvw",
      "em",
      "ex",
      "fr",
      "grad",
      "kHz",
      "lvb",
      "lvh",
      "lvi",
      "lvmax",
      "lvmin",
      "lvw",
      "mm",
      "ms",
      "number",
      "pc",
      "percent",
      "pt",
      "px",
      "rad",
      "registerProperty",
      "rem",
      "s",
      "supports",
      "svb",
      "svh",
      "svi",
      "svmax",
      "svmin",
      "svw",
      "turn",
      "vb",
      "vh",
      "vi",
      "vmax",
      "vmin",
      "vw",
      "compileStreaming",
      "instantiate",
      "instantiateStreaming",
      "alert",
      "blur",
      "cancelIdleCallback",
      "captureEvents",
      "confirm",
      "focus",
      "getComputedStyle",
      "getSelection",
      "matchMedia",
      "moveBy",
      "moveTo",
      "postMessage",
      "print",
      "prompt",
      "releaseEvents",
      "requestIdleCallback",
      "resizeBy",
      "resizeTo",
      "scroll",
      "scrollBy",
      "scrollTo",
      "stop",
      "toString",
      "dispatchEvent",
      "cancelAnimationFrame",
      "requestAnimationFrame",
      "createImageBitmap",
      "reportError",
      "addEventListener",
      "removeEventListener",
      "apply",
      "construct",
      "defineProperty",
      "deleteProperty",
      "getOwnPropertyDescriptor",
      "getPrototypeOf",
      "has",
      "isExtensible",
      "ownKeys",
      "preventExtensions",
      "set",
      "supportedValuesOf",
      "eval",
      "parseInt",
      "parseFloat",
      "isNaN",
      "isFinite",
      "decodeURI",
      "decodeURIComponent",
      "encodeURI",
      "encodeURIComponent",
      "importScripts",
      "createInstallTypingsRequest",
      "toNormalizedPath",
      "normalizedPathToPath",
      "asNormalizedPath",
      "createNormalizedPathMap",
      "isInferredProjectName",
      "makeInferredProjectName",
      "createSortedArray",
      "ThrowNoProject",
      "ThrowProjectLanguageServiceDisabled",
      "ThrowProjectDoesNotContainDocument",
      "isDynamicFileName",
      "allRootFilesAreJsOrDts",
      "allFilesAreJsOrDts",
      "convertFormatOptions",
      "convertCompilerOptions",
      "convertWatchOptions",
      "convertTypeAcquisition",
      "tryConvertScriptKindName",
      "convertScriptKindName",
      "formatMessage",
      "tokenToString",
      "getPositionOfLineAndCharacter",
      "getLineAndCharacterOfPosition",
      "isWhiteSpaceLike",
      "isWhiteSpaceSingleLine",
      "isLineBreak",
      "couldStartTrivia",
      "forEachLeadingCommentRange",
      "forEachTrailingCommentRange",
      "reduceEachLeadingCommentRange",
      "reduceEachTrailingCommentRange",
      "getLeadingCommentRanges",
      "getTrailingCommentRanges",
      "getShebang",
      "isIdentifierStart",
      "isIdentifierPart",
      "createScanner",
      "isExternalModuleNameRelative",
      "sortAndDeduplicateDiagnostics",
      "getDefaultLibFileName",
      "textSpanEnd",
      "textSpanIsEmpty",
      "textSpanContainsPosition",
      "textSpanContainsTextSpan",
      "textSpanOverlapsWith",
      "textSpanOverlap",
      "textSpanIntersectsWithTextSpan",
      "textSpanIntersectsWith",
      "decodedTextSpanIntersectsWith",
      "textSpanIntersectsWithPosition",
      "textSpanIntersection",
      "createTextSpan",
      "createTextSpanFromBounds",
      "textChangeRangeNewSpan",
      "textChangeRangeIsUnchanged",
      "createTextChangeRange",
      "collapseTextChangeRangesAcrossMultipleVersions",
      "getTypeParameterOwner",
      "isParameterPropertyDeclaration",
      "isEmptyBindingPattern",
      "isEmptyBindingElement",
      "walkUpBindingElementsAndPatterns",
      "getCombinedModifierFlags",
      "getCombinedNodeFlags",
      "validateLocaleAndSetLanguage",
      "getOriginalNode",
      "findAncestor",
      "isParseTreeNode",
      "getParseTreeNode",
      "escapeLeadingUnderscores",
      "unescapeLeadingUnderscores",
      "idText",
      "identifierToKeywordKind",
      "symbolName",
      "getNameOfJSDocTypedef",
      "getNameOfDeclaration",
      "getDecorators",
      "getModifiers",
      "getJSDocParameterTags",
      "getJSDocTypeParameterTags",
      "hasJSDocParameterTags",
      "getJSDocAugmentsTag",
      "getJSDocImplementsTags",
      "getJSDocClassTag",
      "getJSDocPublicTag",
      "getJSDocPrivateTag",
      "getJSDocProtectedTag",
      "getJSDocReadonlyTag",
      "getJSDocOverrideTagNoCache",
      "getJSDocDeprecatedTag",
      "getJSDocEnumTag",
      "getJSDocThisTag",
      "getJSDocReturnTag",
      "getJSDocTemplateTag",
      "getJSDocSatisfiesTag",
      "getJSDocTypeTag",
      "getJSDocType",
      "getJSDocReturnType",
      "getJSDocTags",
      "getAllJSDocTags",
      "getAllJSDocTagsOfKind",
      "getTextOfJSDocComment",
      "getEffectiveTypeParameterDeclarations",
      "getEffectiveConstraintOfTypeParameter",
      "isMemberName",
      "isPropertyAccessChain",
      "isElementAccessChain",
      "isCallChain",
      "isOptionalChain",
      "isNullishCoalesce",
      "isConstTypeReference",
      "skipPartiallyEmittedExpressions",
      "isNonNullChain",
      "isBreakOrContinueStatement",
      "isNamedExportBindings",
      "isUnparsedTextLike",
      "isUnparsedNode",
      "isJSDocPropertyLikeTag",
      "isTokenKind",
      "isToken",
      "isLiteralExpression",
      "isTemplateLiteralToken",
      "isTemplateMiddleOrTemplateTail",
      "isImportOrExportSpecifier",
      "isTypeOnlyImportDeclaration",
      "isTypeOnlyExportDeclaration",
      "isTypeOnlyImportOrExportDeclaration",
      "isStringTextContainingNode",
      "isImportAttributeName",
      "isModifier",
      "isEntityName",
      "isPropertyName",
      "isBindingName",
      "isFunctionLike",
      "isClassElement",
      "isClassLike",
      "isAutoAccessorPropertyDeclaration",
      "isModifierLike",
      "isTypeElement",
      "isClassOrTypeElement",
      "isObjectLiteralElementLike",
      "isTypeNode",
      "isFunctionOrConstructorTypeNode",
      "isArrayBindingElement",
      "isPropertyAccessOrQualifiedName",
      "isCallLikeExpression",
      "isCallOrNewExpression",
      "isLeftHandSideExpression",
      "isLiteralTypeLiteral",
      "isAssertionExpression",
      "isIterationStatement",
      "isConciseBody",
      "isForInitializer",
      "isModuleBody",
      "isNamedImportBindings",
      "isModuleReference",
      "isJsxTagNameExpression",
      "isJsxChild",
      "isJsxAttributeLike",
      "isStringLiteralOrJsxExpression",
      "isJsxOpeningLikeElement",
      "isCaseOrDefaultClause",
      "isJSDocCommentContainingNode",
      "isSetAccessor",
      "isGetAccessor",
      "hasOnlyExpressionInitializer",
      "isObjectLiteralElement",
      "isStringLiteralLike",
      "isJSDocLinkLike",
      "hasRestParameter",
      "isRestParameter",
      "getJSDocCommentsAndTags",
      "createUnparsedSourceFile",
      "createInputFiles",
      "createSourceMapSource",
      "setOriginalNode",
      "disposeEmitNodes",
      "setEmitFlags",
      "getSourceMapRange",
      "setSourceMapRange",
      "getTokenSourceMapRange",
      "setTokenSourceMapRange",
      "getCommentRange",
      "setCommentRange",
      "getSyntheticLeadingComments",
      "setSyntheticLeadingComments",
      "addSyntheticLeadingComment",
      "getSyntheticTrailingComments",
      "setSyntheticTrailingComments",
      "addSyntheticTrailingComment",
      "moveSyntheticComments",
      "getConstantValue",
      "setConstantValue",
      "addEmitHelper",
      "addEmitHelpers",
      "removeEmitHelper",
      "getEmitHelpers",
      "moveEmitHelpers",
      "isJsxText",
      "isRegularExpressionLiteral",
      "isNoSubstitutionTemplateLiteral",
      "isTemplateHead",
      "isTemplateMiddle",
      "isTemplateTail",
      "isDotDotDotToken",
      "isPlusToken",
      "isMinusToken",
      "isAsteriskToken",
      "isExclamationToken",
      "isQuestionToken",
      "isColonToken",
      "isQuestionDotToken",
      "isEqualsGreaterThanToken",
      "isPrivateIdentifier",
      "isAssertsKeyword",
      "isAwaitKeyword",
      "isQualifiedName",
      "isComputedPropertyName",
      "isParameter",
      "isPropertySignature",
      "isPropertyDeclaration",
      "isMethodSignature",
      "isMethodDeclaration",
      "isClassStaticBlockDeclaration",
      "isConstructorDeclaration",
      "isGetAccessorDeclaration",
      "isSetAccessorDeclaration",
      "isCallSignatureDeclaration",
      "isConstructSignatureDeclaration",
      "isIndexSignatureDeclaration",
      "isTypePredicateNode",
      "isTypeReferenceNode",
      "isFunctionTypeNode",
      "isConstructorTypeNode",
      "isTypeQueryNode",
      "isTypeLiteralNode",
      "isArrayTypeNode",
      "isTupleTypeNode",
      "isNamedTupleMember",
      "isOptionalTypeNode",
      "isRestTypeNode",
      "isUnionTypeNode",
      "isIntersectionTypeNode",
      "isConditionalTypeNode",
      "isInferTypeNode",
      "isParenthesizedTypeNode",
      "isThisTypeNode",
      "isTypeOperatorNode",
      "isIndexedAccessTypeNode",
      "isMappedTypeNode",
      "isLiteralTypeNode",
      "isImportTypeNode",
      "isTemplateLiteralTypeSpan",
      "isTemplateLiteralTypeNode",
      "isObjectBindingPattern",
      "isArrayBindingPattern",
      "isBindingElement",
      "isArrayLiteralExpression",
      "isObjectLiteralExpression",
      "isPropertyAccessExpression",
      "isElementAccessExpression",
      "isTypeAssertionExpression",
      "isArrowFunction",
      "isDeleteExpression",
      "isTypeOfExpression",
      "isVoidExpression",
      "isPrefixUnaryExpression",
      "isPostfixUnaryExpression",
      "isTemplateExpression",
      "isOmittedExpression",
      "isExpressionWithTypeArguments",
      "isAsExpression",
      "isSatisfiesExpression",
      "isNonNullExpression",
      "isSyntheticExpression",
      "isPartiallyEmittedExpression",
      "isCommaListExpression",
      "isTemplateSpan",
      "isSemicolonClassElement",
      "isVariableStatement",
      "isDoStatement",
      "isVariableDeclarationList",
      "isTypeAliasDeclaration",
      "isModuleBlock",
      "isCaseBlock",
      "isNamespaceExportDeclaration",
      "isImportEqualsDeclaration",
      "isImportClause",
      "isImportTypeAssertionContainer",
      "isAssertClause",
      "isAssertEntry",
      "isImportAttributes",
      "isNamespaceImport",
      "isNamespaceExport",
      "isNamedImports",
      "isExportAssignment",
      "isNamedExports",
      "isMissingDeclaration",
      "isNotEmittedStatement",
      "isExternalModuleReference",
      "isJsxElement",
      "isJsxSelfClosingElement",
      "isJsxOpeningElement",
      "isJsxClosingElement",
      "isJsxFragment",
      "isJsxOpeningFragment",
      "isJsxClosingFragment",
      "isJsxAttribute",
      "isJsxAttributes",
      "isJsxSpreadAttribute",
      "isJsxExpression",
      "isJsxNamespacedName",
      "isCaseClause",
      "isDefaultClause",
      "isHeritageClause",
      "isPropertyAssignment",
      "isShorthandPropertyAssignment",
      "isSpreadAssignment",
      "isUnparsedPrepend",
      "isSourceFile",
      "isBundle",
      "isUnparsedSource",
      "isJSDocTypeExpression",
      "isJSDocNameReference",
      "isJSDocMemberName",
      "isJSDocLink",
      "isJSDocLinkCode",
      "isJSDocLinkPlain",
      "isJSDocAllType",
      "isJSDocUnknownType",
      "isJSDocNullableType",
      "isJSDocNonNullableType",
      "isJSDocOptionalType",
      "isJSDocFunctionType",
      "isJSDocVariadicType",
      "isJSDocNamepathType",
      "isJSDoc",
      "isJSDocTypeLiteral",
      "isJSDocSignature",
      "isJSDocAugmentsTag",
      "isJSDocAuthorTag",
      "isJSDocClassTag",
      "isJSDocCallbackTag",
      "isJSDocPublicTag",
      "isJSDocPrivateTag",
      "isJSDocProtectedTag",
      "isJSDocReadonlyTag",
      "isJSDocOverrideTag",
      "isJSDocOverloadTag",
      "isJSDocDeprecatedTag",
      "isJSDocSeeTag",
      "isJSDocEnumTag",
      "isJSDocParameterTag",
      "isJSDocReturnTag",
      "isJSDocThisTag",
      "isJSDocTypeTag",
      "isJSDocTemplateTag",
      "isJSDocTypedefTag",
      "isJSDocUnknownTag",
      "isJSDocPropertyTag",
      "isJSDocImplementsTag",
      "isJSDocSatisfiesTag",
      "isJSDocThrowsTag",
      "isQuestionOrExclamationToken",
      "isIdentifierOrThisTypeNode",
      "isReadonlyKeywordOrPlusOrMinusToken",
      "isQuestionOrPlusOrMinusToken",
      "isModuleName",
      "isBinaryOperatorToken",
      "setTextRange",
      "canHaveModifiers",
      "canHaveDecorators",
      "forEachChild",
      "createSourceFile",
      "parseIsolatedEntityName",
      "parseJsonText",
      "isExternalModule",
      "updateSourceFile",
      "parseCommandLine",
      "getParsedCommandLineOfConfigFile",
      "readConfigFile",
      "parseConfigFileTextToJson",
      "readJsonConfigFile",
      "convertToObject",
      "parseJsonConfigFileContent",
      "parseJsonSourceFileConfigFileContent",
      "convertCompilerOptionsFromJson",
      "convertTypeAcquisitionFromJson",
      "getEffectiveTypeRoots",
      "resolveTypeReferenceDirective",
      "getAutomaticTypeDirectiveNames",
      "createModuleResolutionCache",
      "createTypeReferenceDirectiveResolutionCache",
      "resolveModuleNameFromCache",
      "resolveModuleName",
      "bundlerModuleNameResolver",
      "nodeModuleNameResolver",
      "classicNameResolver",
      "visitNode",
      "visitNodes",
      "visitLexicalEnvironment",
      "visitParameterList",
      "visitFunctionBody",
      "visitIterationBody",
      "visitCommaListElements",
      "visitEachChild",
      "getTsBuildInfoEmitOutputFilePath",
      "getOutputFileNames",
      "createPrinter",
      "findConfigFile",
      "resolveTripleslashReference",
      "createCompilerHost",
      "getPreEmitDiagnostics",
      "formatDiagnostics",
      "formatDiagnostic",
      "formatDiagnosticsWithColorAndContext",
      "flattenDiagnosticMessageText",
      "getModeForFileReference",
      "getModeForResolutionAtIndex",
      "getModeForUsageLocation",
      "getConfigFileParsingDiagnostics",
      "getImpliedNodeFormatForFile",
      "createProgram",
      "resolveProjectReferencePath",
      "createSemanticDiagnosticsBuilderProgram",
      "createEmitAndSemanticDiagnosticsBuilderProgram",
      "createAbstractBuilder",
      "readBuilderProgram",
      "createIncrementalCompilerHost",
      "createIncrementalProgram",
      "createWatchCompilerHost",
      "createWatchProgram",
      "createBuilderStatusReporter",
      "createSolutionBuilderHost",
      "createSolutionBuilderWithWatchHost",
      "createSolutionBuilder",
      "createSolutionBuilderWithWatch",
      "getDefaultFormatCodeSettings",
      "fromString",
      "createClassifier",
      "createDocumentRegistry",
      "preProcessFile",
      "transpileModule",
      "transpile",
      "toEditorSettings",
      "displayPartsToString",
      "getDefaultCompilerOptions",
      "getSupportedCodeFixes",
      "createLanguageServiceSourceFile",
      "updateLanguageServiceSourceFile",
      "createLanguageService",
      "getDefaultLibFilePath",
      "stream",
      "upgrade",
      "buildConnector",
      "parseMIMEType",
      "serializeAMimeType",
      "deleteCookie",
      "getCookies",
      "getSetCookies",
      "setCookie",
      "setGlobalDispatcher",
      "getGlobalDispatcher",
      "setGlobalOrigin",
      "getGlobalOrigin",
      "createRedirectInterceptor",
      "updateDb",
      "v8ToIstanbul",
      "getAllFiles",
      "extractNamedFunctionsFromSource",
      "visit",
      "generateFunctionListForCodebase",
      "updateFunctionsListHistory",
      "writeFunctionsListToFile",
      "generateAndTrackFunctionList",
      "readTrackerFile",
      "writeTrackerFile",
      "ensureHistoryFile",
      "appendTestHistory",
      "runJestTests",
      "executeScript",
      "pollHealthCheck",
      "checkHealth",
      "startTestServer",
      "initTest",
      "initTestFromFiles",
      "readJsonFile"
    ],
    "removed": []
  }
]